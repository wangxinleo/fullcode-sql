(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{368:function(t,r,s){"use strict";s.r(r);var a=s(19),n=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_2022-05"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2022-05"}},[t._v("#")]),t._v(" 2022-05")]),t._v(" "),r("h2",{attrs:{id:"跟领导就开发工作量问题的沟通"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#跟领导就开发工作量问题的沟通"}},[t._v("#")]),t._v(" 跟领导就开发工作量问题的沟通")]),t._v(" "),r("p",[t._v("关于“总觉得开发人员产能不足”，首先排除程序员态度不好的和技术水平低的，先给个作为一个从业者的答案。")]),t._v(" "),r("p",[t._v("开发时间一般无法量化，即便是很懂程序的开发高手。")]),t._v(" "),r("p",[t._v("你问问任何一个程序员在开发程序时是不是表面看着很简单，结果做起来涉及方向太多，需要更多时间？ 那有人说：“他就能在预定的时间完成”，那我只能说：“他没做过复杂的程序”、“或者在复杂的程序面前只做了功能的大概，表面上实现了功能，旦经不起测试，一测试bug一大堆”，比如我在开发量化软件时，时间都超出我的预计，为什么？因为用心，不是一般的用心，一个功能反复测试n遍，量化软件是需要极其细致的工作，数据和计算结果错一点都不行。另外我开发了用于写策略的脚本语言引擎，类似股票软件的公式，脚本语言引擎是有一定技术难度的，一般程序员是不会自己写的，找现成的，但现成的满足不了需求，我本想三个月完成，结果做了半年多，那如果就三个月能不能完成？肯定能，但性能啊！功能啊！灵活性！扩展性啊！bug率啊！都要做出牺牲，所以我做了半年多，这些问题都解决了，上线运行一年多了很稳定。")]),t._v(" "),r("p",[t._v("综合来说程序员是不能被要求时间的，要求时间他很会偷工减料，能在规定时间完成的，是能让领导开心，但后边擦屁股的时间都会找回来，如果这个人离职，可能这部分功能要重做；那些不能在规定时间完成的，你分析他是态度不积极还是技术水平不好？其实这两点少见，更多的是一心只想把程序做好，真正的程序员都有追求完美的性格，容忍不了程序有太多隐患，当然这样的有太多时候让领导不满意，领导把你的认真多花时间看作是懈怠。当然也有做快质量好的程序员肯定有，但太少了吧？奇才少见，你我皆凡人就别要求公司的员工都是奇才了。")]),t._v(" "),r("p",[t._v("当然奇才能做的又快又好，仅限功能不复杂的。因为以下几点原因：不懂程序的人乱给规定时间、和即便懂程序的不会预估时间凭感觉看领导脸色说时间、再就是有的功能确实无法预估，这样情况下预估出来的时间，奇才也搞不定，那他只好偷工减料了，毕竟现在的情况就是做不完就会有人投诉，大家都是打一份工，谁都不想自己屁股挨板子，反正做不完就是供应商的问题。")]),t._v(" "),r("p",[t._v("想要如何破局我想就真的请信息技术部的领导团队好好审查目前实行的项目管理模式。例如目前使用的Scrum开发框架，产品联系人是否能足够好的分析用户故事以形成一个按照商业价值排序的需求列表？开发团队是否有话语权参与分析和估算相应的任务列表，并得到尊重？在冲刺（Sprint）阶段，开发人员正在进行增量冲刺时，产品联系人不断介入团队要求额外增量且不顾成本及资源用量（此项本应放在下次冲刺阶段重新进行价值排序）是否合理？系统的历史技术债务不计算在开发人员的时间成本中是否合理？代码审查不算在冲刺（Sprint）阶段是否合理？整个团队每次冲刺（Sprint）没有时间回顾和整理代码知识以形成知识库是否合理？等等问题。整个一切都需要我们不断学习和改进管理方式，才能看到一个健康向上积极的开发团队。")])])}),[],!1,null,null,null);r.default=n.exports}}]);